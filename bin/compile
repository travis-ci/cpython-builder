#!/usr/bin/env bash

set -o errexit
set -o verbose

if [[ ! $INSTALL_DEST ]] ; then
  echo 'Missing INSTALL_DEST'
  exit 1
fi

if [[ ! $VERSION ]] ; then
  echo 'Missing $VERSION'
  exit 1
fi

function install_numpy() {
  $HOME/virtualenv/$VIRTENV_VERSION/bin/pip install --upgrade numpy
}

sudo env PYTHON_BUILD_ROOT=/opt/pyenv/plugins/python-build \
  /opt/pyenv/plugins/python-build/bin/python-build --verbose $VERSION $INSTALL_DEST/$VERSION

if [[ $ALIAS ]] ; then
  sudo rm -rf $INSTALL_DEST/$ALIAS
  sudo ln -sf $INSTALL_DEST/$VERSION $INSTALL_DEST/$ALIAS
fi

# set up virtualenv arguments
if [[ $VERSION = pypy3* ]]; then
  PYTHON_BIN=pypy3
  VIRTENV_VERSION=$VERSION
elif [[ $VERSION = pypy* ]]; then
  PYTHON_BIN=pypy
  VIRTENV_VERSION=$VERSION
else
  PYTHON_BIN=python
  VIRTENV_VERSION=python$VERSION
fi

# We must have everything under virtualenv's subtree to be able to tarball it.
# Virtualenv 20+ puts preinstalled modules (pip, setuptools, wheel) into a shared location and symlinks to them.
# 20.0.2+ copies by default instead but the devs plan to change that back sometime.
# 'pip' seeder is the old behavior and is not planned for deprecation in the foreseeable future
# (https://github.com/pypa/virtualenv/issues/1576#issuecomment-584769625).
python -m virtualenv --python=$INSTALL_DEST/$VERSION/bin/$PYTHON_BIN \
  --seeder=pip \
  $HOME/virtualenv/$VIRTENV_VERSION

if [[ $ALIAS ]] ; then
  if [[ $ALIAS = pypy* ]]; then
    VIRTENV_ALIAS=$ALIAS
  else
    VIRTENV_ALIAS=python$ALIAS
  fi
  rm -f $HOME/virtualenv/$VIRTENV_ALIAS
  ln -sf $HOME/virtualenv/$VIRTENV_VERSION $HOME/virtualenv/$VIRTENV_ALIAS
fi

$HOME/virtualenv/$VIRTENV_VERSION/bin/python -c "import sys; assert sys.maxunicode > 65535"

if [[ $PACKAGES ]] ; then
  $HOME/virtualenv/$VIRTENV_VERSION/bin/pip install --upgrade $PACKAGES
fi

if ! [[ "${ALIAS}" == nightly || "${VERSION}" =~ -dev$ ]]; then
  if [[ ${VERSION} == pypy* ]]; then
    $HOME/virtualenv/$VIRTENV_VERSION/bin/${PYTHON_BIN} -m ensurepip
  fi
  install_numpy
fi

